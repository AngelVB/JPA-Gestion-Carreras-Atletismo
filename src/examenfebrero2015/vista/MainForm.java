/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package examenfebrero2015.vista;

import Controlador.CarreraJpaController;
import Controlador.CorredorJpaController;
import Controlador.MarcaJpaController;

import Controlador.GestorJSON;
import Controlador.exceptions.NonexistentEntityException;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import Modelo.Carrera;
import Modelo.Corredor;
import Modelo.Marca;
import Modelo.ListModelCarrera;
import Modelo.ListModelCorredor;
import java.math.BigDecimal;
import java.util.Date;
import org.json.simple.parser.ParseException;

/**
 *
 * @author Angel
 */
public class MainForm extends javax.swing.JFrame {

    EntityManagerFactory emf = null;
    EntityManager em;
    GestorJSON js;
    CorredorJpaController cc;
    CarreraJpaController cca;
    MarcaJpaController cma;
    List<Corredor> listaCorredor;
    List<Carrera> listaCarrera;
    List<Carrera> lista;
    ListModelCorredor modelCorredor;
    ListModelCarrera modelCarrera, modelCarreraCorredor;
    Corredor Corredorsel;
    Carrera Carrerasel;
    Marca Marcasel;

    /**
     * Creates new form MainForm
     */
    public MainForm() {
        initComponents();

        js = new GestorJSON();
        emf = Persistence.createEntityManagerFactory("ExamenFebrero2015PU");
        em = emf.createEntityManager();
        cc = new CorredorJpaController(emf);
        cca = new CarreraJpaController(emf);
        cma = new MarcaJpaController(emf);
        em.getEntityManagerFactory().getCache().evictAll();
        modelCorredor = new ListModelCorredor();
        modelCarrera = new ListModelCarrera();
        modelCarreraCorredor = new ListModelCarrera();
        ListaCorredores.setModel(modelCorredor);
        ListaCarreras.setModel(modelCarreraCorredor);
        ListaCarrerasTodas.setModel(modelCarrera);
        lista = null;
        recargar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btModificar = new javax.swing.JButton();
        btEliminar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListaCorredores = new javax.swing.JList();
        txNombre = new javax.swing.JTextField();
        Nombre = new javax.swing.JLabel();
        txClub = new javax.swing.JTextField();
        Nombre1 = new javax.swing.JLabel();
        Nombre2 = new javax.swing.JLabel();
        btAnyadir = new javax.swing.JButton();
        btNuevo = new javax.swing.JButton();
        txApellidos = new javax.swing.JTextField();
        Nombre3 = new javax.swing.JLabel();
        txdni = new javax.swing.JTextField();
        Nombre4 = new javax.swing.JLabel();
        txFechaNac = new com.toedter.calendar.JDateChooser();
        txTiempo = new javax.swing.JTextField();
        txDorsal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        ListaCarreras = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btModificar1 = new javax.swing.JButton();
        btEliminar1 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        ListaCarrerasTodas = new javax.swing.JList();
        txPoblacion = new javax.swing.JTextField();
        Nombre5 = new javax.swing.JLabel();
        Nombre7 = new javax.swing.JLabel();
        btAnyadir1 = new javax.swing.JButton();
        btNuevo1 = new javax.swing.JButton();
        txOrganiza = new javax.swing.JTextField();
        Nombre8 = new javax.swing.JLabel();
        txLugarSalida = new javax.swing.JTextField();
        Nombre9 = new javax.swing.JLabel();
        txFechaCarrera = new com.toedter.calendar.JDateChooser();
        txDistancia = new javax.swing.JTextField();
        txModalidad = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btExportar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btModificar.setText("Modificar");
        btModificar.setEnabled(false);
        btModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificarActionPerformed(evt);
            }
        });

        btEliminar.setText("Eliminar");
        btEliminar.setEnabled(false);
        btEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminarActionPerformed(evt);
            }
        });

        ListaCorredores.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaCorredores.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaCorredoresMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(ListaCorredores);

        Nombre.setText("Nombre");

        Nombre1.setText("Club");

        Nombre2.setText("Fecha Nac");

        btAnyadir.setText("AÃ±adir");
        btAnyadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnyadirActionPerformed(evt);
            }
        });

        btNuevo.setText("Nuevo");
        btNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevoActionPerformed(evt);
            }
        });

        Nombre3.setText("Apellidos");

        Nombre4.setText("DNI");

        txTiempo.setEnabled(false);
        txTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txTiempoActionPerformed(evt);
            }
        });

        txDorsal.setEnabled(false);

        jLabel2.setText("Tiempo");

        jLabel3.setText("Dorsal");

        ListaCarreras.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaCarreras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaCarrerasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(ListaCarreras);

        jLabel1.setText("Carreras disputadas:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(174, 174, 174)
                .addComponent(btEliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAnyadir)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(btNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(Nombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(Nombre3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nombre1)
                            .addComponent(Nombre2)
                            .addComponent(Nombre4))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txClub)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txdni, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(1, 1, 1)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txDorsal, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txTiempo, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(104, 104, 104))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(btNuevo)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nombre))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nombre3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txdni, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nombre4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(Nombre2)
                                    .addComponent(txFechaNac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(9, 9, 9)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txClub, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Nombre1))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txDorsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btEliminar)
                    .addComponent(btModificar)
                    .addComponent(btAnyadir))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Corredores", jPanel1);

        btModificar1.setText("Modificar");
        btModificar1.setEnabled(false);
        btModificar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btModificar1ActionPerformed(evt);
            }
        });

        btEliminar1.setText("Eliminar");
        btEliminar1.setEnabled(false);
        btEliminar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btEliminar1ActionPerformed(evt);
            }
        });

        ListaCarrerasTodas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListaCarrerasTodas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ListaCarrerasTodasMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(ListaCarrerasTodas);

        Nombre5.setText("Poblacion");

        Nombre7.setText("Fecha");

        btAnyadir1.setText("AÃ±adir");
        btAnyadir1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnyadir1ActionPerformed(evt);
            }
        });

        btNuevo1.setText("Nuevo");
        btNuevo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btNuevo1ActionPerformed(evt);
            }
        });

        Nombre8.setText("Organiza");

        Nombre9.setText("Lugar Salida");

        txDistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txDistanciaActionPerformed(evt);
            }
        });

        jLabel4.setText("Distancia");

        jLabel5.setText("Modalidad");
        jLabel5.setToolTipText("");

        btExportar1.setText("Exportar");
        btExportar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExportar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(btExportar1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btEliminar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btModificar1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAnyadir1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btNuevo1, javax.swing.GroupLayout.DEFAULT_SIZE, 177, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(13, 13, 13)
                                .addComponent(Nombre5))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Nombre8))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Nombre9)
                                .addComponent(jLabel4)
                                .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(Nombre7)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txFechaCarrera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txOrganiza, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txLugarSalida, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(276, 276, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btNuevo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 273, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btEliminar1)
                            .addComponent(btModificar1)
                            .addComponent(btAnyadir1)
                            .addComponent(btExportar1))
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nombre7)
                            .addComponent(txFechaCarrera, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txPoblacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nombre5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txOrganiza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nombre8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txLugarSalida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Nombre9))
                        .addGap(9, 9, 9)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txDistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txModalidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jTabbedPane1.addTab("Carreras", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated

    }//GEN-LAST:event_formWindowActivated

    /**
     * Con este mÃ©todo recargo las listas cada vez que hay un cambio
     */
    private void recargar() {
        this.modelCorredor = new ListModelCorredor();
        this.ListaCorredores.setModel(modelCorredor);
        Query q = em.createNamedQuery("Corredor.findAll");
        listaCorredor = q.getResultList();
        for (Corredor c : listaCorredor) {
            modelCorredor.addCorredor(c);
        }
        this.modelCarrera = new ListModelCarrera();
        this.ListaCarrerasTodas.setModel(modelCarrera);
        Query q1 = em.createNamedQuery("Carrera.findAll");
        listaCarrera = q1.getResultList();
        for (Carrera c : listaCarrera) {
            modelCarrera.addCarrera(c);
        }

    }

    /**
     * MÃ©todo con el que controlo la selecciÃ³n de corredor.
     */
    private void ListaCorredoresMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaCorredoresMouseClicked
        if ((SwingUtilities.isLeftMouseButton(evt)) && (!ListaCorredores.isSelectionEmpty())
                && (this.ListaCorredores.locationToIndex(evt.getPoint()) == ListaCorredores.getSelectedIndex())) {
            this.btAnyadir.setEnabled(false);
            this.btModificar.setEnabled(true);
            this.btEliminar.setEnabled(true);
            int selection = ListaCorredores.getSelectedIndex();
            this.Corredorsel = modelCorredor.getCorredor(selection);

            //CAMPOS DE CORREDOR AL TOCAR
            txNombre.setText("");
            txClub.setText("");
            this.txApellidos.setText("");
            this.txdni.setText("");
            this.txDorsal.setText("");
            this.txTiempo.setText("");
            txNombre.setText(Corredorsel.getNombre());
            txFechaNac.setDate(Corredorsel.getFechaNac());
            txClub.setText(String.valueOf(Corredorsel.getClub()));
            this.txApellidos.setText(String.valueOf(Corredorsel.getApellidos()));
            this.txdni.setText(String.valueOf(Corredorsel.getDni()));
            this.modelCarreraCorredor = new ListModelCarrera();
            this.ListaCarreras.setModel(modelCarreraCorredor);

            for (Marca m : this.Corredorsel.getMarcaList()) {
                modelCarreraCorredor.addCarrera(m.getIdCarrera());
            }

        }
    }//GEN-LAST:event_ListaCorredoresMouseClicked

    /**
     * Eliminar Corredor
     */
    private void btEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminarActionPerformed
        int selection = ListaCorredores.getSelectedIndex();
        if (selection > -1) {

            try {
                Corredor co = this.modelCorredor.getCorredor(selection);
                cc.destroy(co.getIdCorredor());
                JOptionPane.showMessageDialog(null, "Corredor eliminado con Ã©xito.");
                txNombre.setText("");
                this.txDorsal.setText("");
                this.txTiempo.setText("");
                txClub.setText("");
                this.txApellidos.setText("");
                this.txdni.setText("");
                this.btAnyadir.setEnabled(true);
                this.btModificar.setEnabled(false);
                this.btEliminar.setEnabled(false);
                this.modelCorredor.eliminarCorredor(selection);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_btEliminarActionPerformed

    /**
     * AÃ±adir Corredor
     */
    private void btAnyadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnyadirActionPerformed
        String Nombre = txNombre.getText();
        String Apellidos = txApellidos.getText();
        String Club = this.txClub.getText();
        String dni = this.txdni.getText();
        if ((Nombre.equals("")) || (Apellidos.equals(""))) {
            JOptionPane.showMessageDialog(null, "Debe introducir un nombre y apellidos");
        } else if (Club.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe introducir un club");
        } else if (dni.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe introducir un dni");
        } else {

            try {
                Date fechanac = txFechaNac.getDate();
                Corredor co = new Corredor();
                co.setNombre(Nombre);
                co.setApellidos(Apellidos);
                co.setFechaNac(fechanac);
                co.setClub(Club);
                co.setDni(dni);
                cc.create(co);
                JOptionPane.showMessageDialog(null, "Corredor introducido con Ã©xito.");
                txNombre.setText("");
                this.txDorsal.setText("");
                this.txTiempo.setText("");
                txClub.setText("");
                txApellidos.setText("");
                txdni.setText("");
                recargar();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe introducir una  fecha.");
            }
        }
    }//GEN-LAST:event_btAnyadirActionPerformed

    /**
     * Nuevo Corredor. Limpio los campos y activo botones
     *
     * @param evt
     */
    private void btNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevoActionPerformed
        this.btAnyadir.setEnabled(true);
        this.btModificar.setEnabled(false);
        this.btEliminar.setEnabled(false);
        txNombre.setText("");
        this.txDorsal.setText("");
        this.txTiempo.setText("");
        txClub.setText("");
        txApellidos.setText("");
        txdni.setText("");
    }//GEN-LAST:event_btNuevoActionPerformed

    /**
     * Modificar corredor
     *
     * @param evt
     */
    private void btModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificarActionPerformed
        String Nombre = txNombre.getText();
        String Apellidos = txApellidos.getText();
        String Club = this.txClub.getText();
        String dni = this.txdni.getText();

        if ((Nombre.equals("")) || (Apellidos.equals(""))) {
            JOptionPane.showMessageDialog(null, "Debe introducir un nombre y apellidos");
        } else if (Club.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe introducir un club");
        } else if (dni.equals("")) {
            JOptionPane.showMessageDialog(null, "Debe introducir un dni");
        } else {
            try {
                Date fechanac = txFechaNac.getDate();

                Corredor co = this.Corredorsel;
                co.setNombre(Nombre);
                co.setApellidos(Apellidos);
                co.setFechaNac(fechanac);
                co.setClub(Club);
                co.setDni(dni);
                cc.edit(Corredorsel);
                JOptionPane.showMessageDialog(null, "Componente modificado con Ã©xito.");
                txNombre.setText("");
                this.txDorsal.setText("");
                this.txTiempo.setText("");
                txClub.setText("");
                txApellidos.setText("");
                txdni.setText("");
                this.btAnyadir.setEnabled(true);
                this.btModificar.setEnabled(false);
                this.btEliminar.setEnabled(false);
                recargar();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe introducir un nÃºmero de serie numÃ©rico");
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error modificando corredor");
            }
        }
    }//GEN-LAST:event_btModificarActionPerformed

    private void txTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txTiempoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txTiempoActionPerformed

    /**
     * Controlo la selecciÃ³n de carreras disputadas por el corredor.
     *
     * @param evt
     */
    private void ListaCarrerasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaCarrerasMouseClicked
        if ((SwingUtilities.isLeftMouseButton(evt)) && (!this.ListaCarreras.isSelectionEmpty())
                && (this.ListaCarreras.locationToIndex(evt.getPoint()) == ListaCarreras.getSelectedIndex())) {

            int selection = ListaCarreras.getSelectedIndex();
            this.Carrerasel = this.modelCarreraCorredor.getCarrera(selection);

            for (Marca m : Carrerasel.getMarcaList()) {
                if (m.getIdCorredor().equals(Corredorsel)) {
                    this.txDorsal.setText(String.valueOf(m.getDorsal()));
                    this.txTiempo.setText(String.valueOf(m.getTiempo()));
                }
            }
        }
    }//GEN-LAST:event_ListaCarrerasMouseClicked

    /**
     * Modificar Carrera
     *
     * @param evt
     */
    private void btModificar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btModificar1ActionPerformed
        String Poblacion = this.txPoblacion.getText();
        String Organiza = txOrganiza.getText();
        String LugarSalida = this.txLugarSalida.getText();
        String Modalidad = this.txModalidad.getText();
        if ((Poblacion.equals("")) || (Organiza.equals("")) || (LugarSalida.equals("")) || (Modalidad.equals(""))) {
            JOptionPane.showMessageDialog(null, "Debe rellenar todos los datos");
        } else {

            try {
                Date fechacar = this.txFechaCarrera.getDate();
                Carrera ca = Carrerasel;
                double distancia1 = Double.parseDouble(this.txDistancia.getText());
                BigDecimal distancia = BigDecimal.valueOf(distancia1);
                ca.setDistancia(distancia);
                ca.setFecha(fechacar);
                ca.setLugarSalida(LugarSalida);
                ca.setModalidad(Modalidad);
                ca.setOrganiza(Organiza);
                ca.setPoblacion(Poblacion);
                cca.edit(ca);
                JOptionPane.showMessageDialog(null, "Carrera modificada con Ã©xito.");
                this.txDistancia.setText("");
                this.txPoblacion.setText("");
                this.txOrganiza.setText("");
                this.txModalidad.setText("");
                this.txLugarSalida.setText("");
                recargar();

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe introducir una  fecha.");
            } catch (Exception ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btModificar1ActionPerformed

    /**
     * Eliminar Carrera
     *
     * @param evt
     */
    private void btEliminar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btEliminar1ActionPerformed
        int selection = this.ListaCarrerasTodas.getSelectedIndex();
        if (selection > -1) {

            try {
                Carrera ca = this.modelCarrera.getCarrera(selection);

                cca.destroy(ca.getIdCarrera());
                JOptionPane.showMessageDialog(null, "Carrera eliminada con Ã©xito.");
                txNombre.setText("");
                this.txDistancia.setText("");
                this.txPoblacion.setText("");
                this.txOrganiza.setText("");
                this.txModalidad.setText("");
                this.txLugarSalida.setText("");
                this.btAnyadir1.setEnabled(true);
                this.btModificar1.setEnabled(false);
                this.btEliminar1.setEnabled(false);
                this.modelCarrera.eliminarCarrera(selection);
            } catch (NonexistentEntityException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btEliminar1ActionPerformed

    /**
     * Controlo la selecciÃ³n del listado de carreras
     *
     * @param evt
     */
    private void ListaCarrerasTodasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ListaCarrerasTodasMouseClicked
        if ((SwingUtilities.isLeftMouseButton(evt)) && (!ListaCarrerasTodas.isSelectionEmpty())
                && (this.ListaCarrerasTodas.locationToIndex(evt.getPoint()) == ListaCarrerasTodas.getSelectedIndex())) {
            this.btAnyadir1.setEnabled(false);
            this.btModificar1.setEnabled(true);
            this.btEliminar1.setEnabled(true);
            int selection = ListaCarrerasTodas.getSelectedIndex();
            this.Carrerasel = modelCarrera.getCarrera(selection);

            //CAMPOS DE CARRERA AL TOCAR
            this.txOrganiza.setText(Carrerasel.getOrganiza());
            this.txPoblacion.setText(Carrerasel.getPoblacion());
            this.txLugarSalida.setText(Carrerasel.getLugarSalida());
            this.txDistancia.setText(String.valueOf(Carrerasel.getDistancia()));
            this.txModalidad.setText(Carrerasel.getModalidad());
            this.txFechaCarrera.setDate(Carrerasel.getFecha());
        }
    }//GEN-LAST:event_ListaCarrerasTodasMouseClicked

    /**
     * AÃ±adir carrera
     *
     * @param evt
     */
    private void btAnyadir1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnyadir1ActionPerformed
        String Poblacion = this.txPoblacion.getText();
        String Organiza = txOrganiza.getText();
        String LugarSalida = this.txLugarSalida.getText();
        String Modalidad = this.txModalidad.getText();

        if ((Poblacion.equals("")) || (Organiza.equals("")) || (LugarSalida.equals("")) || (Modalidad.equals(""))) {
            JOptionPane.showMessageDialog(null, "Debe rellenar todos los datos");
        } else {

            try {
                Date fechacar = this.txFechaCarrera.getDate();
                Carrera ca = new Carrera();
                double distancia1 = Double.parseDouble(this.txDistancia.getText());
                BigDecimal distancia = BigDecimal.valueOf(distancia1);
                ca.setDistancia(distancia);
                ca.setFecha(fechacar);
                ca.setLugarSalida(LugarSalida);
                ca.setModalidad(Modalidad);
                ca.setOrganiza(Organiza);
                ca.setPoblacion(Poblacion);
                cca.create(ca);
                JOptionPane.showMessageDialog(null, "Carrera introducida con Ã©xito.");
                this.txDistancia.setText("");
                this.txPoblacion.setText("");
                this.txOrganiza.setText("");
                this.txModalidad.setText("");
                this.txLugarSalida.setText("");
                recargar();
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(null, "Debe introducir una  fecha.");
            }
        }
    }//GEN-LAST:event_btAnyadir1ActionPerformed

    /**
     * Nueva Carrera. Limpio campos y preparo botones.
     *
     * @param evt
     */
    private void btNuevo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btNuevo1ActionPerformed
        this.btAnyadir1.setEnabled(true);
        this.btModificar1.setEnabled(false);
        this.btEliminar1.setEnabled(false);
        this.txDistancia.setText("");
        this.txPoblacion.setText("");
        this.txOrganiza.setText("");
        this.txModalidad.setText("");
        this.txLugarSalida.setText("");
    }//GEN-LAST:event_btNuevo1ActionPerformed

    private void txDistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txDistanciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txDistanciaActionPerformed

    /**
     * Exportar carreras a JSON.
     *
     * @param evt
     */
    private void btExportar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExportar1ActionPerformed
        Query q = em.createNamedQuery("Carrera.findAll");
        List<Carrera> carreras = q.getResultList();
        for (Carrera c : carreras) {
            try {
                js.exportar(carreras, "carreras.json");
                JOptionPane.showMessageDialog(null, "ExportaciÃ³n realizada con Ã©xito.");
            } catch (IOException ex) {
                Logger.getLogger(MainForm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Error exportando datos.");
            }
        }
    }//GEN-LAST:event_btExportar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList ListaCarreras;
    public javax.swing.JList ListaCarrerasTodas;
    public javax.swing.JList ListaCorredores;
    private javax.swing.JLabel Nombre;
    private javax.swing.JLabel Nombre1;
    private javax.swing.JLabel Nombre2;
    private javax.swing.JLabel Nombre3;
    private javax.swing.JLabel Nombre4;
    private javax.swing.JLabel Nombre5;
    private javax.swing.JLabel Nombre7;
    private javax.swing.JLabel Nombre8;
    private javax.swing.JLabel Nombre9;
    private javax.swing.JButton btAnyadir;
    private javax.swing.JButton btAnyadir1;
    private javax.swing.JButton btEliminar;
    private javax.swing.JButton btEliminar1;
    private javax.swing.JButton btExportar1;
    private javax.swing.JButton btModificar;
    private javax.swing.JButton btModificar1;
    private javax.swing.JButton btNuevo;
    private javax.swing.JButton btNuevo1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField txApellidos;
    private javax.swing.JTextField txClub;
    private javax.swing.JTextField txDistancia;
    private javax.swing.JTextField txDorsal;
    private com.toedter.calendar.JDateChooser txFechaCarrera;
    private com.toedter.calendar.JDateChooser txFechaNac;
    private javax.swing.JTextField txLugarSalida;
    private javax.swing.JTextField txModalidad;
    private javax.swing.JTextField txNombre;
    private javax.swing.JTextField txOrganiza;
    private javax.swing.JTextField txPoblacion;
    private javax.swing.JTextField txTiempo;
    private javax.swing.JTextField txdni;
    // End of variables declaration//GEN-END:variables
}
